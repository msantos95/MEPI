VPP[k]=clasificacion_vp[2,2]
}
else{
Especificidad[k]=0
Sensibilidad[k]=0
VPN[k]=0
VPP[k]=0
}
}
clasificacion_se=NULL
clasificacion_vp=NULL
for (k in (1:101)) {
Ajustado=NULL
Ajustado[(MODELO_AIC_STEP1$fitted.values>pc[k])]="Si"
Ajustado[(MODELO_AIC_STEP1$fitted.values<=pc[k])]="No"
clasificacion=table(Real=factor(wcgs2$chd,c("no","yes"),c("no","si"))
,Clasificado=Ajustado)
if(sum(dim(clasificacion))==4){
addmargins(clasificacion)
clasificacion_se= prop.table(clasificacion,1)
clasificacion_vp= prop.table(clasificacion,2)
especificidad[k]=clasificacion_se[1,1]
sensibilidad[k]=clasificacion_se[2,2]
VPN[k]=clasificacion_vp[1,1]
VPP[k]=clasificacion_vp[2,2]
}
else{
Especificidad[k]=0
Sensibilidad[k]=0
VPN[k]=0
VPP[k]=0
}
}
table(especificidad)
table(sensibilidad)
summary(sensibilidad)
summary(especificidad)
for (k in (1:101)) {
Ajustado=NULL
Ajustado[(MODELO_AIC_STEP1$fitted.values>pc[k])]="Si"
Ajustado[(MODELO_AIC_STEP1$fitted.values<=pc[k])]="No"
clasificacion=table(Real=factor(wcgs2$chd,c("no","yes"),c("No","Si"))
,Clasificado=Ajustado)
if(sum(dim(clasificacion))==4){
addmargins(clasificacion)
clasificacion_se= prop.table(clasificacion,1)
clasificacion_vp= prop.table(clasificacion,2)
especificidad[k]=clasificacion_se[1,1]
sensibilidad[k]=clasificacion_se[2,2]
VPN[k]=clasificacion_vp[1,1]
VPP[k]=clasificacion_vp[2,2]
}
else{
Especificidad[k]=0
Sensibilidad[k]=0
VPN[k]=0
VPP[k]=0
}
}
Sensibilidad=NULL
Especificidad=NULL
for (k in (1:101)) {
Ajustado=NULL
Ajustado[(MODELO_AIC_STEP1$fitted.values>pc[k])]="Si"
Ajustado[(MODELO_AIC_STEP1$fitted.values<=pc[k])]="No"
clasificacion=table(Real=factor(wcgs2$chd,c("no","yes"),c("No","Si"))
,Clasificado=Ajustado)
if(sum(dim(clasificacion))==4){
addmargins(clasificacion)
clasificacion_se= prop.table(clasificacion,1)
clasificacion_vp= prop.table(clasificacion,2)
Especificidad[k]=clasificacion_se[1,1]
Sensibilidad[k]=clasificacion_se[2,2]
VPN[k]=clasificacion_vp[1,1]
VPP[k]=clasificacion_vp[2,2]
}
else{
Especificidad[k]=0
Sensibilidad[k]=0
VPN[k]=0
VPP[k]=0
}
}
plot(pc,especificidad,main="Especificidad y sensibilidad del modelo 4",
type = "l",ylab = "Especificidad y Sensibilidad")
sensibilidad=NULL
especificidad=NULL
k=NULL
for (k in (1:101)) {
Ajustado=NULL
Ajustado[(MODELO_AIC_STEP1$fitted.values>pc[k])]="Si"
Ajustado[(MODELO_AIC_STEP1$fitted.values<=pc[k])]="No"
clasificacion=table(Real=factor(wcgs2$chd,c("no","yes"),c("No","Si"))
,Clasificado=Ajustado)
if(sum(dim(clasificacion))==4){
addmargins(clasificacion)
clasificacion_se= prop.table(clasificacion,1)
clasificacion_vp= prop.table(clasificacion,2)
Especificidad[k]=clasificacion_se[1,1]
Sensibilidad[k]=clasificacion_se[2,2]
VPN[k]=clasificacion_vp[1,1]
VPP[k]=clasificacion_vp[2,2]
}
else{
Especificidad[k]=0
Sensibilidad[k]=0
VPN[k]=0
VPP[k]=0
}
}
plot(pc,especificidad,main="Especificidad y sensibilidad del modelo 4",
type = "l",ylab = "Especificidad y Sensibilidad")
plot(pc,Especificidad,main="Especificidad y sensibilidad del modelo 4",
type = "l",ylab = "Especificidad y Sensibilidad")
plot(pc,Especificidad,main="Especificidad y Sensibilidad del modelo 4",
type = "l",ylab = "Especificidad y Sensibilidad")
lines(pc,sensibilidad,col="red")
lines(pc,Sensibilidad,col="red")
plot(pc,Especificidad,main="Especificidad y Sensibilidad del Modelo 4",
type = "l",ylab = "Especificidad y Sensibilidad")
lines(pc,Sensibilidad,col="red")
datos_roc=roc(wcgs2$chd,MODELO_AIC_STEP1$fitted.values)
library(pROC)
datos_roc=roc(wcgs2$chd,MODELO_AIC_STEP1$fitted.values)
auc(datos_roc)
plot(datos_roc,print.auc=TRUE)
datos_roc$sensitivities
CHDNO=wcgs2$chd=="no"
CHDSI=wcgs2$chd=="yes"
summary(wcgs$age[CHDNO])
summary(wcgs$age[CHDSI])
summary(wcgs2$age[CHDNO])
summary(wcgs$2age[CHDSI])
summary(wcgs2$2age[CHDSI])
summary(wcgs2$age[CHDSI])
summary(wcgs2$age[CHDNO])
summary(wcgs2$height[CHDNO])
summary(wcgs2$height[CHDSI])
summary(wcgs2$weight[CHDNO])
summary(wcgs2$weight[CHDSI])
summary(wcgs2$dbp[CHDNO])
summary(wcgs2$dbp[CHDSI])
summary(wcgs2$chol[CHDNO])
summary(wcgs2$chol[CHDSI])
summary(wcgs2$cigs[CHDNO])
summary(wcgs2$cigs[CHDSI])
summary(wcgs2$chol[CHDNO])
summary(wcgs2$chol[CHDSI])
summary(wcgs2$cigs[CHDNO])
summary(wcgs2$cigs[CHDSI])
summary(wcgs2$timechd[CHDNO])
summary(wcgs2$timechd[CHDSI])
var.test(wcgs2$age[CHDNO],wcgs2$age[CHDSI])
t.test(wcgs2$age[CHDNO],wcgs2$age[CHDSI],var.equal = T)
var.test(wcgs2$height[CHDNO],wcgs2$height[CHDSI])
t.test(wcgs2$height[CHDNO],wcgs2$height[CHDSI],var.equal = T)
var.test(wcgs2$weight[CHDNO],wcgs2$weight[CHDSI])
t.test(wcgs2$weight[CHDNO],wcgs2$weight[CHDSI],var.equal = T)
var.test(wcgs2$sdp[CHDNO],wcgs2$sdp[CHDSI])
t.test(wcgs2$sdp[CHDNO],wcgs2$sdp[CHDSI],var.equal = F)
var.test(wcgs2$dbp[CHDNO],wcgs2$dbp[CHDSI])
t.test(wcgs2$dbp[CHDNO],wcgs2$dbp[CHDSI],var.equal = T)
var.test(wcgs2$chol[CHDNO],wcgs2$chol[CHDSI])
t.test(wcgs2$chol[CHDNO],wcgs2$chol[CHDSI],var.equal = F)
var.test(wcgs2$cigs[CHDNO],wcgs2$cigs[CHDSI])
t.test(wcgs2$cigs[CHDNO],wcgs2$cigs[CHDSI],var.equal = F)
var.test(wcgs2$timechd[CHDNO],wcgs2$timechd[CHDSI])
t.test(wcgs2$timechd[CHDNO],wcgs2$timechd[CHDSI],var.equal = F)
TABLA1=table(wcgs2$chd,wcgs$behave)
TABLA1=table(wcgs2$chd,wcgs2$behave)
addmargins(TABLA1,2)
addmargins(TABLA1)
addmargins(TABLA1,1)
addmargins(TABLA1,2)
TABLA1=table(wcgs2$chd,wcgs2$dibep)
addmargins(TABLA1,2)
TABLA1=table(wcgs2$chd,wcgs2$typechd)
addmargins(TABLA1,2)
TABLA1=table(wcgs2$chd,wcgs2$arcus)
table(wcgs2$chd,wcgs2$arcus)
library(readxl)
PAS <- read_excel("C:/Users/msant/Downloads/PAS.xlsx")
View(PAS)
PAS <- read_excel("C:/Users/msant/Downloads/PAS.xlsx")
plot(PAS$edad,PAS$colest)
PAS <- read_excel("C:/Users/msant/Downloads/PAS.xlsx")
plot(PAS$edad,PAS$pas)
library(ggplot2)
?ggplot2
ggplot(PAS, aes(edad,pas)) +geom_point()
ggplot(PAS, aes(edad,pas))
ggplot(PAS, aes(edad,pas))+geom_point()
MODELO1=lm(pas~edad,data = PAS)
summmary(MODELO1)
summary(MODELO1)
ggplot(PAS, aes(edad,pas))+geom_point()+geom_smooth()
ggplot(PAS, aes(edad,pas))+geom_point()+geom_smooth(method = "lm", se = FALSE)
install.packages("MASS")
library(MASS)
mass::birthwt
MASS::birthwt
birth<-MASS::birthwt
summary(birth)
plot(birth)
cor(birth[,c(2,3,9,10)])
plot(birth$age,birth$bwt)
library(ggplot2)
ggplot(birth, aes(age,bwt)+geom_point()
ggplot(birth, aes(age,bwt)+geom_point())
ggplot(birth, aes(age,bwt))+geom_point()
ggplot(birth, aes(age,bwt))+geom_point()+geom_smooth(method = "lm", se = FALSE)
plot(birth$age,birth$bwt,xlab = "Edad de la madre",ylab = "Peso al nacer")
ggplot(birth, aes(age,bwt))+geom_point()
##Creando el modelo lineal
MODELO1=lm(age,bwt,data = birth)
##Creando el modelo lineal
MODELO1=lm(age~bwt,data = birth)
summary(MODELO1)
##Creando el modelo lineal
MODELO1=lm(bwt~age,data = birth)
summary(MODELO1)
##Creando el modelo lineal
MODELO1=lm(bwt~lwt,data = birth)
MODELO2=lm(bwt~age,data = birth)
summary(MODELO2)
##Creando el modelo lineal
MODELO1=lm(bwt~lwt,data = birth)
summary(MODELO1)
MODELO3=lm(bwt~age+I(age^2),data = birth)
summary(MODELO3)
##Ajuste 1 para evaluar la prediccion
prediccion=predict(MODELO1, data.frame(lwt=c(130,131,132,133)),interval = "confidence")
prediccion
###Graficando
plot(birth$lwt,birth$bwt)
abline(MODELO1$coefficients)
ggplot(birth, aes(bwt,lwt))+geom_point()+geom_smooth(method = "lm", se = FALSE)
###Graficando
plot(birth$lwt,birth$bwt)
ggplot(birth, aes(bwt,lwt))+geom_point()+geom_smooth(method = "lm", se = FALSE)
ggplot(birth, aes(lwt,bwt))+geom_point()+geom_smooth(method = "lm", se = FALSE)
###Graficando
plot(birth$lwt,birth$bwt)
abline(MODELO1$coefficients)
ggplot(birth, aes(lwt,bwt))+geom_point()+geom_smooth(method = "lm", se = FALSE)
abline(MODELO1$coefficients)
###Graficando
plot(birth$lwt,birth$bwt)
###Otro tipo de ajuste
age=(15:45)
curva=as.numeric(predict(MODELO2,newdata = as.data.frame(age)))
plot(birth$age,birth$bwt)
lines(edad,curva)
lines(age,curva)
ggplot(birth, aes(age,bwt))+geom_point()+geom_smooth(method = "lm", se = FALSE)
###Con variables categóricas
birth$smoke=factor(birth$smoke,c(0,1),c("No","Si"))
summary(birth)
ggplot(birth, aes(smoke,bwt,colour=smoke))+
geom_point(position = "jitter")+
geom_boxplot(alpha=0,colour="black")
ggplot(birth, aes(smoke,bwt,colour=smoke))+
geom_point(position = "jitter")+
geom_boxplot(alpha=0,colour="black")
ggplot(birth, aes(smoke,bwt,colour=smoke))+
geom_point(position = "jitter")+
geom_boxplot(alpha=0,colour="black")
###Aplicadno t.test para comparar medias
t.test(birth$smoke[birth$smoke=="Si"],birth$smoke[birth$smoke=="No"])
###Aplicadno t.test para comparar medias
t.test(birth$smoke[birth$smoke=="No"],birth$smoke[birth$smoke=="Si"])
###Aplicadno t.test para comparar medias
t.test(birth$bwt[birth$smoke=="No"],birth$bwt[birth$smoke=="Si"])
MODELO4=lm(bwt~smoke,data = birth)
summary(MODELO4)
confint(MODELO4)
##Ahora con raza
birth$race=factor(birth$race,c(1,2,3),c("Blanca","Negra","Otra"))
summary(birth$race)
ggplot(birth, aes(race,bwt,colour=smoke))+
geom_point(position = "jitter")+
geom_boxplot(alpha=0,colour="black")
ggplot(birth, aes(race,bwt,colour=race))+
geom_point(position = "jitter")+
geom_boxplot(alpha=0,colour="black")
###Para comparar medias de más de 2 grupos, usamos pairwise ttest
pairwise.t.test(birth$bwt,birth$race)
MODELO5=lm(bwt~race,data = birth)
summary(MODELO5)
anova(MODELO1)
MODELOA=lm(pas~edad,data = PAS)
anova(MODELOA)
summary(MODELOA)
14951.3+8260.5
example<-matrix(c(1,2,3,4,5,6,7,8),nrow = 4,ncol = 2)
example
View(example)
View(example)
View(MODELOA)
View(MODELOA)
datasets::iris
install.packages("KernSmooth")
library(KernSmooth)
anova(MODELOA)
summary(MODELOA)
MODELOB=lm(bwt~ptl,data = birth)
MODELOB=lm(bwt~ht,data = birth)
MODELOB=lm(bwt~ptl,data = birth)
MODELOC=lm(bwt~ht,data = birth)
MODELOD=lm(bwt~ui,data = birth)
MODELOE=lm(bwt~ftv,data = birth)
MODELO6=lm(bwt~ptl,data = birth)
MODELO7=lm(bwt~ht,data = birth)
MODELO8=lm(bwt~ui,data = birth)
MODELO9=lm(bwt~ftv,data = birth)
summary(MODELO1)
an1=anova(MODELO1)
an1=anova(MODELO1)
an2=anova(MODELO2)
an3=anova(MODELO3)
an4=anova(MODELO4)
an5=anova(MODELO5)
an6=anova(MODELO6)
an7=anova(MODELO7)
an8=anova(MODELO8)
an9=anova(MODELO9)
anova(MODELO1)
an1$`Sum Sq`[1]/sum(an1$`Sum Sq`)
an1$`Sum Sq`[1]/sum(an1$`Sum Sq`)
an2$`Sum Sq`[1]/sum(an2$`Sum Sq`)
an3$`Sum Sq`[1]/sum(an3$`Sum Sq`)
an4$`Sum Sq`[1]/sum(an4$`Sum Sq`)
an5$`Sum Sq`[1]/sum(an5$`Sum Sq`)
an6$`Sum Sq`[1]/sum(an6$`Sum Sq`)
an7$`Sum Sq`[1]/sum(an7$`Sum Sq`)
an8$`Sum Sq`[1]/sum(an8$`Sum Sq`)
an9$`Sum Sq`[1]/sum(an9$`Sum Sq`)
an9=anova(MODELO9)
anova(MODELO9)
lm(bwt~ftv,data = birth)
summary(MODELO19
summary(MODELO19)
summary(MODELO9)
birth$ui=factor(c(0,1),c("No","Si"))
birth$ui=factor(birth$ui(c(0,1),c("No","Si")))
birth$ui=factor(birth$ui,c(0,1),c("No","Si"))
summary(birth$ui)
MODELO10=lm(bwt~ui+race,data = birth)
summary(MODELO10)
anova(MODELO10)
8059031/(8059031+4716436+87194188)
8059031*8059031/(8059031+4716436+87194188)
MODELO10=lm(bwt~ui+race,data = birth)
summary(MODELO10)
lm(bwt~ui+race,data = birth)
summary(MODELO10)
plot(birth$bwt,MODELO10$fitted.values)
cor(cbind(birth$bwt,MODELO10$fitted.values))
MODELO11=lm(bwt~ui*race,data = birth)
summary(MODELO11)
anova(MODELO11)
summary(MODELO10)
summary(MODELO11)
anova(MODELO10,MODELO11)
###Seleccion de variables
MOD_NULO=lm(bwt~1,data = birth)
MOD_EP=lm(bwt~.,data = birth[,-1])
summary(MOD_EP)
S1=step(MOD_NULO,direction = "forward",trace = 1,scope = ~age+lwt+race+smoke+ptl+ht+ui+ftv)
S2=step(MOD_EP,direction = "backward")
S3=step(MOD_EP,direction = "both")
S3
predict(MODELOA,data.frame(edad=c(30,31,32,33)),interval = "confidence")
plot(PAS$edad,PAS$pas)
abline(MODELOA$coefficients)
ggplot(PAS, aes(edad,pas))
ggplot(PAS, aes(edad,pas))+geom_point()
ggplot(PAS, aes(edad,pas))+geom_point()+geom_smooth(method = lm,se=F)
ggplot(PAS, aes(edad,pas))+geom_point()+geom_smooth(method = "lm", se = FALSE)
plot(PAS$edad,PAS$pas)
abline(MODELOA$coefficients)
ggplot(PAS, aes(edad,pas))+geom_point()+geom_smooth(method = "lm", se = FALSE)
t.test(PAS$pas[PAS$sexo==1],(PAS$pas[PAS$sexo==0]))
MODELOB=lm(pas~sexo,data = PAS)
summary(MODELOB)
confint(MODELOB)
###Cálculo del coeficiente de relación de Pearson
cor(cbin(PAS$pas,PAS$edad))
###Cálculo del coeficiente de relación de Pearson
cor(cbind(PAS$pas,PAS$edad))
summary(MODELOA)
0.8025733*0.8025733
install.packages("mplot")
library(mplot)
FEV <- mplot::fev
summary(FEV)
FEV$sex=factor(FEV$sex,c(0,0),c("Mujer","Hombre"))
summary(FEV)
FEV$sex=factor(FEV$sex,c(0,1),c("Mujer","Hombre"))
summary(FEV)
FEV <- mplot::fev
summary(FEV)
FEV$sex=factor(FEV$sex,c(0,1),c("Mujer","Hombre"))
summary(FEV)
FEV$smoke=factor(FEV$smoke,c(0,1),c("No fuma","Fuma"))
summary(FEV)
FIT1=lm(fev~age,data = FEV)
FIT1=lm(fev~age,data = FEV)
FIT2=lm(fev~height,data = FEV)
FIT3=lm(fev~sex,data = FEV)
FIT4=lm(fev~smoke,data = FEV)
summary(FIT1)
summary(FIT2)
summary(FIT3)
summary(FIT4)
cor(cbind(FEV$fev,FEV$age,FEV$height,FEV$sex,FEV$smoke))
View(MODELO1)
View(MODELO2)
View(MODELOA)
View(MODELOB)
View(MODELOB)
View(MODELOA)
View(MODELOB)
View(MODELOC)
View(MODELOD)
View(MODELOE)
View(MODELOC)
View(MODELOB)
MODELOB=lm(pas~colest,data = PAS)
summary(MODELOB)
summary(MODELOA)
MODELOC=lm(pas~edad+colest,data = PAS)
summary(MODELOC)
MODELOC
response: pas
anova(MODELOC)
plot(PAS$pas,MODELOC$coefficients)
plot(PAS$pas,MODELOC$fitted.values)
abline(MODELOC$coefficients)
cor(cbind(PAS$pas,MODELOC$fitted.values)
cor(cbind(PAS$pas,MODELOC$fitted.values))
cor(cbind(PAS$pas,MODELOC$fitted.values))
View(MODELOE)
View(MODELOE)
MODELOD=lm(pas~edad+colest+sexo+edad*colest+edad*sexo+colest*sexo,data = PAS)
summary(MODELOD)
MODELOD=lm(pas~edad+colest+sexo+edad*sexo+colest*sexo+edad*colest,data = PAS)
summary(MODELOD)
anova(MODELOD)
MODELOE=lm(pas~1,data = PAS)
lm(pas~1,data = PAS)
summary(MODELOE)
anova(MODELOE)
View(MODELOA)
View(MODELOB)
View(MODELOC)
View(MODELOD)
View(MODELOE)
MODELOE=lm(pas~edad+colest+sexo,data = PAS)
summary(MODELOE)
anova(MODELOE)
anova(MODELOD,MODELOE)
MODELOF=lm(pas~edad,data = PAS)
MODELOG=lm(pas~edad+sexo,data = PAS)
summary(MODELOF)
summary(MODELOG)
MODELOH=lm(pas~edad*sexo,data = PAS)
summary(MODELOH)
plot(S1)
grasas <- read.table('http://verso.mat.uam.es/~joser.berrendero/datos/EdadPesoGrasas.txt', header = TRUE)
library(haven)
BASE <- read_dta("C:/Users/msant/Downloads/perulung_ems.dta")
View(BASE)
summary(BASE)
BASE$sex=factor(BASE$sex,c(0,1),c("Niña","Niño"))
BASE$respsymptoms=factor(BASE$respsymptoms,c(0,1),c("No tiene","Tiene"))
summary(BASE)
summary(BASE$fev1[BASE$sex=="Niña"])
summary(BASE$fev1[BASE$sex=="Niño"])
summary(BASE$height[BASE$sex=="Niña"])
summary(BASE$height[BASE$sex=="Niño"])
summary(BASE$age[BASE$sex=="Niña"])
summary(BASE$age[BASE$sex=="Niño"])
table(BASE$respsymptoms[BASE$sex=="Niña"])
table(BASE$respsymptoms[BASE$sex=="Niño"])
library(ggplot2)
PLOT1=ggplot(BASE, aes(age,fev1))+geom_point()+geom_smooth(method=lm,se=FALSE)
PLOT1+ggtitle("Relación Volumen Espiratorio vs Edad") +
xlab("Edad (Años)") + ylab("Volumen Espiratorio (L)")
PLOT2=ggplot(BASE, aes(height,fev1))+geom_point()+geom_smooth(method=lm,se=FALSE)
PLOT2+ggtitle("Relación Volumen Espiratorio vs Estatura") +
xlab("Estatura (cm)") + ylab("Volumen Espiratorio (L)")
PLOT3=ggplot(BASE, aes(sex,fev1))+geom_point()+geom_smooth(method=lm,se=FALSE)
PLOT3+ggtitle("Relación Volumen Espiratorio vs Estatura") +
xlab("Estatura (cm)") + ylab("Volumen Espiratorio (L)")
cor(cbind(BASE$fev1,BASE$height))
cor(cbind(BASE$age,BASE$fev1))
FIT1=lm(fev1~age,data = BASE)
summary(FIT1)
FIT2=lm(fev1~height,data = BASE)
summary(FIT2)
FIT3=lm(fev1~sex,data = BASE)
summary(FIT3)
t.test(BASE$fev1[BASE$sex=="Niña"],BASE$fev1[BASE$sex=="Niño"])
FIT4=lm(fev1~respsymptoms,data = BASE)
summary(FIT4)
FIT5=lm(fev1~age+height,data = BASE)
summary(FIT5)
anova(FIT5,FIT2)
anova(FIT2,FIT5)
FIT6=lm(fev1~age+height+sex+respsymptoms,data = BASE)
summary(FIT6)
